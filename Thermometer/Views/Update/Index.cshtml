@model ConfigViewModel

@{
  Layout = null;
}

<!DOCTYPE html>

<html>
<head>
  <title>Technical Page</title>
</head>
<body>
<div>
  <p>Refresh rate: @(@ViewBag.RefreshRate *1000) s</p>
  <form id="refresh-form" action="#">
    <button id="refresh-button" type="submit">Force Data Refresh</button>
  </form>
</div>
<div>
  <p>Average temp collection rate: @(@ViewBag.CollectionRate *1000) s</p>
  <form id="collection-form" action="#">
    <button id="collection-button" type="submit">Force Data Collection</button>
  </form>
</div>
<div>
  <p>Daily report hour: @ViewBag.ReportTime.Hour:@ViewBag.ReportTime.Minute:@ViewBag.ReportTime.Second </p>
  <form id="report-form" action="#">
    <button id="report-button" type="submit">Force Report Generate</button>
  </form>
</div>
</body>
</html>
<script src="/lib/signalr/signalr.js"></script>
<script type="text/javascript">

  var refreshForm = document.getElementById("refresh-form");
  var refreshButton = document.getElementById("refresh-button");
  var collectionForm = document.getElementById("collection-form");
  var collectionButton = document.getElementById("collection-button");
  var reportForm = document.getElementById("report-form");
  var reportButton = document.getElementById("report-button");

  var connection = new signalR.HubConnection("/hubs/update");

  connection.start();

  refreshForm.addEventListener("submit",
    function() {
      var message = "";
      connection.send("Update", message);
    });
  refreshButton.addEventListener('click', function() {}, true);
  setInterval(function() {
      var event = new MouseEvent('click'),
        canceled = !refreshButton.dispatchEvent(event);

      if (canceled) {
        console.log('Click event was canceled');
      }
    },
    @ViewBag.RefreshRate * 1000);


  collectionForm.addEventListener("submit",
    function() {
      var message = "";
      connection.send("Collect", message);
    });
  collectionButton.addEventListener('click', function() {}, true);
  setInterval(function() {
      var event = new MouseEvent('click'),
        canceled = !collectionButton.dispatchEvent(event);

      if (canceled) {
        console.log('Click event was canceled');
      }
    },
    @ViewBag.CollectionRate * 1000);

  reportForm.addEventListener("submit",
    function() {
      var message = "";
      connection.send("Report", message);
    });
  reportButton.addEventListener('click', function() {}, true);
  setInterval(function() { // Set interval for checking
      var date = new Date(); // Create a Date object to find out what time it is
      if (date.getHours() === @ViewBag.ReportTime.Hour &&
        date.getMinutes() === @ViewBag.ReportTime.Minute) { // Check the time
        var event = new MouseEvent('click'),
          canceled = !reportButton.dispatchEvent(event);

        if (canceled) {
          console.log('Click event was canceled');
        }
      }
    },
    30000);

</script>